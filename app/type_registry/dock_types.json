{
  "runtime_id": 1062,
  "types": {

  "Did": "[u8;32]",
  "Bytes32": "[u8;32]",
  "Bytes33": "[u8;33]",
  "Bytes64": "[u8;64]",
  "Bytes65": "[u8;65]",
  "PublicKey": {
    "type": "enum",
    "type_mapping": [
      [
        "Sr25519",
        "Bytes32"
      ],
      [
        "Ed25519",
        "Bytes32"
      ],
      [
        "Secp256k1",
        "Bytes33"
      ]
    ]
  },
  "DidSignature": {
    "type": "enum",
    "type_mapping": [
      [
        "Sr25519",
        "Bytes64"
      ],
      [
        "Ed25519",
        "Bytes64"
      ],
      [
        "Secp256k1",
        "Bytes65"
      ]
    ]
  },
  "KeyDetail": {
    "type": "struct",
    "type_mapping": [
      [
        "controller",
        "Did"
      ],
      [
        "public_key",
        "PublicKey"
      ]
    ]
  },
  "KeyUpdate": {
    "type": "struct",
    "type_mapping": [
      [
        "did",
        "Did"
      ],
      [
        "public_key",
        "PublicKey"
      ],
      [
        "controller",
        "Option<Did>"
      ],
      [
        "last_modified_in_block",
        "BlockNumber"
      ]
    ]
  },
  "DidRemoval": {
    "type": "struct",
    "type_mapping": [
      [
        "did",
        "Did"
      ],
      [
        "last_modified_in_block",
        "BlockNumber"
      ]
    ]
  },
  "RegistryId": "[u8;32]",
  "RevokeId": "[u8;32]",
  "Registry": {
    "type": "struct",
    "type_mapping": [
      [
        "policy",
        "Policy"
      ],
      [
        "add_only",
        "bool"
      ]
    ]
  },
  "Revoke": {
    "type": "struct",
    "type_mapping": [
      [
        "registry_id",
        "RegistryId"
      ],
      [
        "revoke_ids",
        "BTreeSet<RevokeId>"
      ],
      [
        "last_modified",
        "BlockNumber"
      ]
    ]
  },
  "UnRevoke": {
    "type": "struct",
    "type_mapping": [
      [
        "registry_id",
        "RegistryId"
      ],
      [
        "revoke_ids",
        "BTreeSet<RevokeId>"
      ],
      [
        "last_modified",
        "BlockNumber"
      ]
    ]
  },
  "RemoveRegistry": {
    "type": "struct",
    "type_mapping": [
      [
        "registry_id",
        "RegistryId"
      ],
      [
        "last_modified",
        "BlockNumber"
      ]
    ]
  },
  "PAuth": "BTreeMap<Did, DidSignature>",
  "Policy": {
    "type": "enum",
    "type_mapping": [
      [
        "OneOf",
        "BTreeSet<Did>"
      ]
    ]
  },
  "BlobId": "[u8;32]",
  "Blob": {
    "type": "struct",
    "type_mapping": [
      [
        "id",
        "BlobId"
      ],
      [
        "blob",
        "Vec<u8>"
      ],
      [
        "author",
        "Did"
      ]
    ]
  },
  "EpochNo": "u32",
  "EpochLen": "u32",
  "SlotNo": "u64",
  "EpochDetail": {
    "type": "struct",
    "type_mapping": [
      [
        "validator_count",
        "u8"
      ],
      [
        "starting_slot",
        "SlotNo"
      ],
      [
        "expected_ending_slot",
        "SlotNo"
      ],
      [
        "ending_slot",
        "Option<SlotNo>"
      ],
      [
        "total_emission",
        "Option<u128>"
      ],
      [
        "emission_for_treasury",
        "Option<u128>"
      ],
      [
        "emission_for_validators",
        "Option<u128>"
      ]
    ]
  },
  "ValidatorStatsPerEpoch": {
    "type": "struct",
    "type_mapping": [
      [
        "block_count",
        "EpochLen"
      ],
      [
        "locked_reward",
        "Option<u128>"
      ],
      [
        "unlocked_reward",
        "Option<u128>"
      ]
    ]
  },
  "Payload": {
    "type": "struct",
    "type_mapping": [
      [
        "proposal",
        "Vec<u8>"
      ],
      [
        "round_no",
        "u64"
      ]
    ]
  },
  "Membership": {
    "type": "struct",
    "type_mapping": [
      [
        "members",
        "BTreeSet<Did>"
      ],
      [
        "vote_requirement",
        "u64"
      ]
    ]
  },
  "PMAuth": "BTreeMap<Did, DidSignature>",
  "StateChange": {
    "type": "enum",
    "type_mapping": [
      [
        "KeyUpdate",
        "KeyUpdate"
      ],
      [
        "DidRemoval",
        "DidRemoval"
      ],
      [
        "Revoke",
        "Revoke"
      ],
      [
        "UnRevoke",
        "UnRevoke"
      ],
      [
        "RemoveRegistry",
        "RemoveRegistry"
      ],
      [
        "Blob",
        "Blob"
      ],
      [
        "MasterVote",
        "Payload"
      ]
    ]
  },










    "Address": "AccountIdAddress",
    "BlockNumber": "U32",
    "LeasePeriod": "BlockNumber",
    "Weight": "u64",
    "SessionKeysPolkadot": {
      "type": "struct",
      "type_mapping": [
         ["grandpa", "AccountId"],
         ["babe", "AccountId"],
         ["im_online", "AccountId"],
         ["authority_discovery", "AccountId"],
         ["parachains", "AccountId"]
      ]
    },
    "Keys": "SessionKeysPolkadot",
    "DispatchInfo": {
      "type": "struct",
      "type_mapping": [
         ["weight", "Weight"],
         ["class", "DispatchClass"],
         ["paysFee", "Pays"]
      ]
    }
  },
  "versioning": [
    {
      "runtime_range": [1019, 1031],
      "types": {
        "DispatchError": {
          "type": "struct",
          "type_mapping": [
            ["module", "Option<u8>"],
            ["error", "u8"]
          ]
        }
      }
    },
    {
      "runtime_range": [1032, null],
      "types": {
        "DispatchError": {
          "type": "enum",
          "type_mapping": [
            ["Other", "Null"],
            ["CannotLookup", "Null"],
            ["BadOrigin", "Null"],
            ["Module", "DispatchErrorModule"]
          ]
        }
      }
    },
    {
      "runtime_range": [1019, 1037],
      "types": {
        "IdentityInfo": {
          "type": "struct",
          "type_mapping": [
             ["additional", "Vec<IdentityInfoAdditional>"],
             ["display", "Data"],
             ["legal", "Data"],
             ["web", "Data"],
             ["riot", "Data"],
             ["email", "Data"],
             ["pgpFingerprint", "Option<H160>"],
             ["image", "Data"]
          ]
        }
      }
    },
    {
      "runtime_range": [1038, null],
      "types": {
        "IdentityInfo": {
          "type": "struct",
          "type_mapping": [
             ["additional", "Vec<IdentityInfoAdditional>"],
             ["display", "Data"],
             ["legal", "Data"],
             ["web", "Data"],
             ["riot", "Data"],
             ["email", "Data"],
             ["pgpFingerprint", "Option<H160>"],
             ["image", "Data"],
             ["twitter", "Data"]
          ]
        }
      }
    },
    {
      "runtime_range": [1019, 1042],
      "types": {
        "SlashingSpans": {
          "type": "struct",
          "type_mapping": [
             ["spanIndex", "SpanIndex"],
             ["lastStart", "EraIndex"],
             ["prior", "Vec<EraIndex>"]
          ]
        }
      }
    },
    {
      "runtime_range": [1043, null],
      "types": {
        "SlashingSpans": {
          "type": "struct",
          "type_mapping": [
             ["spanIndex", "SpanIndex"],
             ["lastStart", "EraIndex"],
             ["lastNonzeroSlash", "EraIndex"],
             ["prior", "Vec<EraIndex>"]
          ]
        }
      }
    },
    {
      "runtime_range": [1019, 1045],
      "types": {
        "Address": "RawAddress",
        "StakingLedger<AccountId, BalanceOf>": {
          "type": "struct",
          "type_mapping": [
             ["stash", "AccountId"],
             ["total", "Compact<Balance>"],
             ["active", "Compact<Balance>"],
             ["unlocking", "Vec<UnlockChunk<Balance>>"]
          ]
        },
        "BalanceLock": {
          "type": "struct",
          "type_mapping": [
             ["id", "LockIdentifier"],
             ["amount", "Balance"],
             ["until", "BlockNumber"],
             ["reasons", "WithdrawReasons"]
          ]
        }
      }
    },
    {
      "runtime_range": [1050, null],
      "types": {
        "Address": "AccountIdAddress",
        "StakingLedger<AccountId, BalanceOf>": {
          "type": "struct",
          "type_mapping": [
            ["stash", "AccountId"],
            ["total", "Compact<Balance>"],
            ["active", "Compact<Balance>"],
            ["unlocking", "Vec<UnlockChunk<Balance>>"],
            ["lastReward", "Option<EraIndex>"]
          ]
        },
        "BalanceLock": {
          "type": "struct",
          "type_mapping": [
             ["id", "LockIdentifier"],
             ["amount", "Balance"],
             ["reasons", "Reasons"]
          ]
        }
      }
    },
    {
      "runtime_range": [1019, 1054],
      "types": {
        "ReferendumInfo": {
          "type": "struct",
          "type_mapping": [
             ["end", "BlockNumber"],
             ["proposal", "Proposal"],
             ["threshold", "VoteThreshold"],
             ["delay", "BlockNumber"]
          ]
        }
      }
    },
    {
      "runtime_range": [1054, null],
      "types": {
        "ReferendumInfo": {
          "type": "enum",
          "type_mapping": [
            ["Ongoing", "ReferendumStatus"],
            ["Finished", "ReferendumInfoFinished"]
          ]
        }
      }
    },
    {
      "runtime_range": [1019, 1056],
      "types": {
        "Weight": "u32"
      }
    },
    {
      "runtime_range": [1057, null],
      "types": {
        "Weight": "u64"
      }
    },
    {
      "runtime_range": [1019, 1061],
      "types": {
        "Heartbeat": {
          "type": "struct",
          "type_mapping": [
             ["blockNumber", "BlockNumber"],
             ["networkState", "OpaqueNetworkState"],
             ["sessionIndex", "SessionIndex"],
             ["authorityIndex", "AuthIndex"]
          ]
        },
        "DispatchInfo": {
          "type": "struct",
          "type_mapping": [
             ["weight", "Weight"],
             ["class", "DispatchClass"],
             ["paysFee", "bool"]
          ]
        }
      }
    },
    {
      "runtime_range": [1062, null],
      "types": {
        "Heartbeat": {
          "type": "struct",
          "type_mapping": [
             ["blockNumber", "BlockNumber"],
             ["networkState", "OpaqueNetworkState"],
             ["sessionIndex", "SessionIndex"],
             ["authorityIndex", "AuthIndex"],
             ["validatorsLen", "u32"]
          ]
        },
        "DispatchInfo": {
          "type": "struct",
          "type_mapping": [
             ["weight", "Weight"],
             ["class", "DispatchClass"],
             ["paysFee", "Pays"]
          ]
        }
      }
    }
  ]
}
